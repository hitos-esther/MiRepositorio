		1. ¡Hola Mundo! - Salida De Datos Por Pantalla
		
    • System.out.print() =para mostrar una frase por pantalla colocando la frase entre paréntesis.
    • System.out.println()= es igual pero añade un salto de línea al final.
    
    EJEMPLO
      /**
      * Muestra por pantalla la frase "¡Hola mundo!"
      *
      * @author Esther Hitos
      */
      public class HolaMundo { // Clase principal
      public static void main(String[] args) {
          System.out.println("¡Hola mundo!");
          }
      }
		1.2 Coloreado De Texto

	Con \033[CODIGOSUBRAYADO;CODIGOCOLORm 
	Ejemplo:\033[42;31m –> Subrayado en verde con texto en rojo
	Substituimos CODIGOCOLOR por uno de los siguientes números de colores:
			0 Reset
			30 Texto en Negro (Black)
			31 Texto en Rojo (Red)
			32 Texto en Verde (Green)
			33 Texto en Amarillo (Yellow)
			34 Texto en Azul (Blue)
			35 Texto en Morado (Magenta)
			36 Texto en Azul (Cyan)
			37 Texto en Blanco (White) Lo ponemos en gris para que lo visualicéis.
			
	Substituimos CODIGOSUBRAYADO por uno de los siguientes números de colores:
			40 Fondo en Negro (Black) (NO FUNCIONA EN NETBEANS)
			41 Fondo en Rojo (Red)
			42 Fondo en Verde (Green)
			43 Fondo en Amarillo (Yellow)
			44 Fondo Azul (Blue)
			45 Fondo en Morado (Magenta)46 Fondo en Azul (Cyan)
			47 Fondo en Blanco (White)
EJEMPLO			

public class TablaDeColores {
public static void main(String[] args) {
System.out.println("┌────────┬───────────┬────────┬────────────────┐");
System.out.println("│ Código │Color│ Código │Color│");
System.out.println("├────────┼───────────┼────────┼────────────────┤");
System.out.print("│30│\033[30m negro \033[39;49m│");
System.out.println("90│\033[90m negro claro \033[39;49m│");
System.out.print("│31│\033[31m rojo \033[39;49m│");
System.out.println("91│\033[91m rojo claro \033[39;49m│");
System.out.print("│32│\033[32m verde \033[39;49m│");
System.out.println("92│\033[92m verde claro \033[39;49m│");
System.out.print("│33│\033[33m amarillo \033[39;49m │");
System.out.println("93│\033[93m amarillo claro \033[39;49m│");
System.out.print("│34│\033[34m azul \033[39;49m│");
System.out.println("94│\033[94m azul claro \033[39;49m│");
System.out.print("│35│\033[35m morado \033[39;49m│");
System.out.println("95│\033[95m morado claro \033[39;49m │");
System.out.print("│36│\033[36m cian \033[39;49m│");
System.out.println("96│\033[96m cian claro \033[39;49m│");
System.out.print("│37│\033[37m blanco \033[39;49m│");
System.out.println("97│\033[97m blanco claro \033[39;49m │");
System.out.println("└────────┴───────────┴────────┴────────────────┘");

			1.3 Sangría
			
sangría o indentación {} = es muy importante sangrar (indentar) bien porque da una idea de
qué partes del código son las que contienen a otras.

			1.4 Caracteres Especiales
			
Mediante System.out.print() se pueden mostrar palabras o frases, esto es, secuencias de
letras, espacios y signos de puntuación Esta instrucción, además,
permite mostrar caracteres especiales - emoticonos, figuras de ajedrez, fichas de
dominó, etc.

Apéndice C. Caracteres especiales
Líneas para tablas
─━│┃┄┅┆┇┈┉┊┋┌┏┐┓└┗┘┛├┣┤┫┬┳┴┻┼╋═║╔╗╚╝╠╣╦╩╬╭╮╯╰
Bloques
█░▒▓■□▢▤▥▦▧▨◧◨◩◪◫◰◱◲◳⊞⊟⊠⊡
Figuras de ajedrez
♔♕♖♗♘♙♚♛♜♝♞♟
Círculos
◉○◌◍◎●◐◑◒◓◦◯⊕⊖⊗⊘⊙⊛⊜⊝ⴱⴲⵀⵁⵔⵕⵙⵚ
Flechas
←↑→↓↔↕↖↗↘↙↚↛↜↝↞↟↠↡↢↣↤↥↦↧↨↩↪↫↬↭↮↯↰↱↲↳↴↵
↶↷↸↹↺↻↼↽↾↿⇀⇁⇂⇃⇄⇅⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇕⇖⇗⇘⇙⇚⇛
⇜⇝⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪⇫⇬⇭⇮⇯⇰⇱⇲⇳⇴⇵⇶⇷⇸⇹⇺⇻⇼⇽⇾⇿➔➘
➙➚➛➜➝➞➟➠➡➢➣➤➥➦➧➨➩➪➫➬➭➮➯➱➲➳➴➵➶➷➸➹➺➻➼➽➾
Números en círculos
❶❷❸❹❺❻❼❽❾❿12345678910➊➋➌➍➎➏➐➑➒➓Apéndice C. Caracteres especiales
370
Dados
⚀⚁⚂⚃⚄⚅
Fichas de dominó
🀰🀱🀲🀳🀴🀵🀶🀷🀸🀹🀺🀻🀼🀽🀾🀿🁀🁁🁂🁃🁄🁅🁆🁇🁈🁉
🁊🁋🁌🁍🁎🁏🁐🁑🁒🁓🁔🁕🁖🁗🁘🁙🁚🁛🁜🁝🁞🁟🁠🁡🁢🁣
🁤🁥🁦🁧🁨🁩🁪🁫🁬🁭🁮🁯🁰🁱🁲🁳🁴🁵🁶🁷🁸🁹🁺🁻🁼🁽🁾🁿🂀🂁🂂🂃🂄🂅🂆🂇🂈🂉
🂊🂋🂌🂍🂎🂏🂐🂑🂒🂓
Cartas
🂠🂡🂢🂣🂤🂥🂦🂧🂨🂩🂪🂫🂬🂭🂮🂱🂲🂳🂴🂵🂶🂷🂸🂹🂺🂻🂼🂽🂾🃁🃂🃃
🃄🃅🃆🃇🃈🃉🃊🃋🃌🃍🃎🃏🃑🃒🃓🃔🃕🃖🃗🃘🃙🃚🃛🃜🃝🃞🃟
Caras
🐭🐮🐱🐵😀😁😂😃😄😅😆😇😈😉😊😋😌☹☺😍😎😏😐😑😒😓😔😕😖😗😘
😙😚😛😜😝😞😟😠😡😢😣😥😦😧😨😩😪😫😭😮😯😰😱😲😳😴😵😶😷😸😹
😺😻😼😽😾😿🙀
Horóscopo
♈♉♊♋♌♍♎♏♐♑♒♓
Miscelánea
⌨☎☏☔☀☁☃☄★☆☕☘☠☢☣☤☥☦☩♰♱☬☭☮☯☼☾♁♂※⁕⁜Ω♻⚐⚑
⚒⚓⚔⚕⚖⚗⚘⚙⚚⚛⚜⚠⚡⛀⛁⛂⛃✂✇✈✉✌✍✎✑✒✓✔✕✖✙✚✛✜✝✞✟
✠✡✢✣✤✥✦✧✩✪✫✬✭✮✯✰✱✲✳✴✵✶✷✸✹ꙮ

                        1.5 Salida Formateada
                        	
Instrucción System.out.printf() análoga al printf() del lenguaje C.
Permite formatear la salida que se pretende mostrar por pantalla.

EJEMPLO
/**
* Salida formateada
*
* @author Esther Hitos
*/
public class SalidaFormateada01 {
public static void main(String[] args) {
System.out.printf("El número %d no tiene decimales.\n", 21);
System.out.printf("El número %f sale con decimales.\n", 21.0);
System.out.printf("El %.3f sale exactamente con 3 decimales.\n", 21.0);
}
}

El carácter '\n' es un salto de línea.

En una casilla %d solo se aceptan números enteros (sin decimales).

En una casilla %.3f se especifica que se deben mostrar exactamente 3 decimales (podemos poner el numero de decimales 	que nos interese).

En una casilla %s dentro de una plantilla que se le pasa a un System.out.printf() se debe
	rellenar con una cadena de caracteres, es decir, con una secuencia de letras, espacios
	y signos de puntuación.
	
En la casilla %-10s se inserta una cadena de caracteres, %-10s alinea a la izquierda y %10s alinea a la derecha
El carácter \t , comillas simples con \' , comillas dobles con \" o icluso la propia barra inclinada con \\ se pueden 	incluir como tabuladores en una cadena formateada.

EJEMPLO

/**
* Salida formateada
*
* @author Esther Hitos
*/
public class SalidaFormateada02 {
public static void main(String[] args) {
	System.out.println(" Artículo	Precio/caja	No cajas");
	System.out.println("-----------------------------------------");
	System.out.printf("%-10s	%8.2f		%6d\n", "manzanas", 4.5, 10);
	System.out.printf("%-10s	%8.2f		%6d\n", "peras", 2.75, 120);
	System.out.printf("%-10s	%8.2f		%6d\n", "aguacates", 10.0, 6);
	}
}
		
